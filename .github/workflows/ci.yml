name: CI

on: [push, pull_request, fork, workflow_dispatch]

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install ruff
        run: pip install ruff
      - name: Check formatting
        run: ruff format --check --diff
      - name: Check linting
        run: ruff check --diff

  pyright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pdm-project/setup-pdm@v4
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          pdm install
          yarn global add pyright
      - name: Type check
        run: pdm run pyright

  build:
    strategy:
      matrix:
        job: ["distributions", "languages"]
    runs-on: ubuntu-latest
    steps:
      - name: Free up some disk space
        run: |
          df -h
          sudo rm -rf /usr/local/lib/android /usr/share/dotnet
          echo
          df -h
      - uses: actions/checkout@v4
      - name: Clone submodules
        run: |
          git config --global url."https://${{ secrets.HF_TOKEN }}@huggingface.co/".insteadOf "https://huggingface.co/"
          git submodule update --init --recursive
          git lfs install
          GIT_TRACE=1 git lfs pull
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          pip install uv
          uv pip install -r pyproject.toml --system
      - name: Build
        run: python entry.py ${{ matrix.job }}
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: output-${{ matrix.job }}
          path: data/output

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        run: npm i -g pnpm
      - name: Install dependencies
        working-directory: frontend
        run: pnpm install
      - name: Eslint check
        working-directory: frontend
        run: pnpm lint
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v5
        with:
          name: output-distributions
          path: data/output
      - uses: actions/download-artifact@v5
        with:
          name: output-languages
          path: data/output
      - name: Setup pnpm
        run: npm i -g pnpm
      - name: Install dependencies
        working-directory: frontend
        run: pnpm install
      - name: Svelte check
        working-directory: frontend
        run: pnpm check
      - name: Build frontend
        working-directory: frontend
        env:
          BASE_PATH: /${{ github.event.repository.name }}
        run: pnpm build
      - name: Upload pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/build
      - name: Deploy
        uses: actions/deploy-pages@v4
        id: deployment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url}}
